name: Integration
on:
  pull_request:
    types: [locked] # All integration tests are run every time the PR is locked

jobs:
  aws-deploy-integration-tests:
    name: AWS Deployment Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npx lerna bootstrap
      - run: npx lerna run compile
      - run: npx lerna run integration/aws-deploy --stream
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

  aws-func-integration-tests:
    name: AWS Functionality Integration Tests
    needs:
      - aws-deploy-integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npx lerna bootstrap
      - run: npx lerna run compile
      - run: npx lerna run integration/aws-func --stream
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1

    end-to-end-tests:
      name: End-to-end Tests
      needs:
        - aws-func-integration-tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - run: npx lerna bootstrap
        - run: npx lerna run compile
        - run: npx lerna run integration/end-to-end --stream
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: us-east-1

    aws-nuke-integration-tests:
      name: AWS Nuke Integration Tests
      needs:
        - aws-func-integration-tests
        - end-to-end-tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - run: npx lerna bootstrap
        - run: npx lerna run compile
        - run: npx lerna run integration/aws-nuke --stream
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: us-east-1

    cli-integration-tests:
      name: CLI Integration Tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - run: npx lerna bootstrap
        - run: npx lerna run compile
        - run: npx lerna run integration/cli --stream

    local-integration-tests:
      name: Local Environment Integration Tests
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12.x
        - run: npx lerna bootstrap
        - run: npx lerna run compile
        - run: npx lerna run integration/local --stream

  kubernetes-deploy-integration-tests:
    name: Kubernetes deployment integration tests
    runs-on: ubuntu-latest
    env:
      KUBECONFIG: '/home/runner/.kube/config'
    steps:
      - uses: actions/checkout@v2
      - uses: manusa/actions-setup-minikube@v2.3.1
        with:
          minikube version: 'v1.18.1'
          kubernetes version: 'v1.19.7'
          driver: 'docker'
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: sudo snap install helm --classic
      - run: kubectl create ns booster-my-store-kubernetes
      - run: kubectl config set-context --current --namespace=booster-my-store-kubernetes
      - run: minikube start --namespace=booster-my-store-kubernetes
      - run: npx lerna bootstrap
      - run: npx lerna run compile
      - run: npx lerna run integration/k8s-deploy --stream