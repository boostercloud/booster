name: Publish
on:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'

jobs:
  publish-npm:
    if: "!contains(github.event.head_commit.author.name, 'GITHUBACTION')"
    runs-on: ubuntu-latest
    steps:
      - run: echo "$DATA"
        env:
          DATA: ${{ toJson(github.event.head_commit) }}
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN_ACTION }}

      # Workaround for https://github.com/actions/checkout/issues/6#issuecomment-520636057
      - name: Prepare repository
        run: git checkout "${GITHUB_REF:11}"

      - name: Configure Git
        run: |
          git remote rm origin
          git remote add origin "https://$USER_NAME:$GITHUB_PAT@github.com/boostercloud/booster.git"
          git fetch
          git config --local user.email "action@github.com"
          git config --local user.name "GITHUBACTION"
        env:
          USER_NAME: ${{ secrets.DEPLOYING_USER_NAME }}
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN_ACTION }} # Token for pushing

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/

      - name: Rush Install
        # Pinning to specific commit that has been audited. Only update 3rd party
        # actions' commit hashes if you've audited them
        uses: advancedcsg-open/actions-rush@981bd2de50c1c39dbb8a537e646ee0c410da8638
        with:
          build: true

      # Discard all changes that might have occurred after change build
      - run: git stash

      - name: Authenticate with Registry
        run: npm config set "//registry.npmjs.org/:_authToken" "$NPM_TOKEN"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Pack local dependencies for integration tests
        run: node common/scripts/install-run-rush.js pack-integration-deps

      - name: 'Az CLI login'
        uses: azure/login@v1.4.0
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      - name: Running integration tests before release
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BOT_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BOT_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
          AZURE_APP_ID: ${{ secrets.AZURE_CLIENTID }}
          AZURE_SECRET: ${{ secrets.AZURE_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          REGION: East US
          publisherEmail: noreply@booster.cloud
          publisherName: Booster App
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENTID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTIONID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANTID }}
        # This is not running the integration tests of other providers. Think how this could be done, as they require some other configuration
        # (as an example, check the k8s tests in "integration-test.yml", it requires a minicube environment)
        # Maybe running them in different jobs.
        run: cd packages/framework-integration-tests && node ../../common/scripts/install-run-rushx.js integration -v

      - name: Discard all the changes after integration tests
        run: git stash

      - name: Bump version using Rush
        run: node common/scripts/install-run-rush.js version --bump

      - name: Publish using Rush
        run: node common/scripts/install-run-rush.js publish --apply --publish --include-all --target-branch origin/main --add-commit-details

        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_ACTION }}
