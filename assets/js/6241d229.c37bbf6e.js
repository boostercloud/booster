"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8302],{2998:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var t=n(5893),i=n(1151);const o={},s="Retry configuration",l={id:"going-deeper/retry-configuration",title:"Retry configuration",description:"Booster provides a configurable retry mechanism for event store operations with exponential backoff and error filtering capabilities. This feature helps handle transient failures and ensures reliable event processing.",source:"@site/docs/10_going-deeper/retry-configuration.mdx",sourceDirName:"10_going-deeper",slug:"/going-deeper/retry-configuration",permalink:"/going-deeper/retry-configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/boostercloud/booster/tree/main/website/docs/10_going-deeper/retry-configuration.mdx",tags:[],version:"current",lastUpdatedBy:"Mario Castro Squella",lastUpdatedAt:1753808418,formattedLastUpdatedAt:"Jul 29, 2025",frontMatter:{},sidebar:"docs",previous:{title:"Storing events in batches",permalink:"/going-deeper/event-batches"},next:{title:"Frequently Asked Questions",permalink:"/frequently-asked-questions"}},d={},a=[{value:"Configuration",id:"configuration",level:2},{value:"Retry Behavior",id:"retry-behavior",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Example: Filtering Specific Errors",id:"example-filtering-specific-errors",level:2},{value:"Logging",id:"logging",level:2},{value:"Azure Provider Configuration",id:"azure-provider-configuration",level:2}];function c(e){const r={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"retry-configuration",children:"Retry configuration"}),"\n",(0,t.jsx)(r.p,{children:"Booster provides a configurable retry mechanism for event store operations with exponential backoff and error filtering capabilities. This feature helps handle transient failures and ensures reliable event processing."}),"\n",(0,t.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(r.p,{children:"You can configure the retry behavior in your Booster configuration file:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"import { Booster } from '@boostercloud/framework-core'\nimport { BoosterConfig } from '@boostercloud/framework-types'\n\nBooster.configure('production', (config: BoosterConfig): void => {\n  config.appName = 'my-booster-app'\n  config.providerPackage = '@boostercloud/framework-provider-azure'\n\n  // Configure retry behavior for event store operations\n  config.eventStoreRetry = {\n    maxRetries: 3,                    // Maximum number of retry attempts\n    initialDelay: 100,                // Initial delay in milliseconds\n    maxDelay: 1000,                   // Maximum delay between retries\n    backoffFactor: 2,                 // Multiplier for exponential backoff\n    jitterFactor: 0.1,                // Random jitter factor (0-1)\n    retryAllErrors: true,             // Whether to retry all errors by default\n    nonRetryableErrors: ['ErrorA'],   // Errors that should never be retried\n    retryableErrors: ['ErrorB'],      // Errors that should be retried when retryAllErrors is false\n  }\n})\n"})}),"\n",(0,t.jsx)(r.h2,{id:"retry-behavior",children:"Retry Behavior"}),"\n",(0,t.jsx)(r.p,{children:"The retry mechanism follows these rules:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["If ",(0,t.jsx)(r.code,{children:"retryAllErrors"})," is true (default) or undefined, all errors are retried except those in ",(0,t.jsx)(r.code,{children:"nonRetryableErrors"})]}),"\n",(0,t.jsxs)(r.li,{children:["If ",(0,t.jsx)(r.code,{children:"retryAllErrors"})," is false, only errors in ",(0,t.jsx)(r.code,{children:"retryableErrors"})," are retried"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"nonRetryableErrors"})," takes precedence over other settings"]}),"\n",(0,t.jsx)(r.li,{children:"The delay between retries follows an exponential backoff pattern with jitter to prevent thundering herd problems"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Option"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Default"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"maxRetries"}),(0,t.jsx)(r.td,{children:"number"}),(0,t.jsx)(r.td,{children:"3"}),(0,t.jsx)(r.td,{children:"Maximum number of retry attempts"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"initialDelay"}),(0,t.jsx)(r.td,{children:"number"}),(0,t.jsx)(r.td,{children:"100"}),(0,t.jsx)(r.td,{children:"Initial delay before first retry in milliseconds"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"maxDelay"}),(0,t.jsx)(r.td,{children:"number"}),(0,t.jsx)(r.td,{children:"1000"}),(0,t.jsx)(r.td,{children:"Maximum delay between retries in milliseconds"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"backoffFactor"}),(0,t.jsx)(r.td,{children:"number"}),(0,t.jsx)(r.td,{children:"2"}),(0,t.jsx)(r.td,{children:"Multiplier for exponential backoff"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"jitterFactor"}),(0,t.jsx)(r.td,{children:"number"}),(0,t.jsx)(r.td,{children:"0.1"}),(0,t.jsx)(r.td,{children:"Random jitter factor (0-1) to prevent thundering herd"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"retryAllErrors"}),(0,t.jsx)(r.td,{children:"boolean"}),(0,t.jsx)(r.td,{children:"true"}),(0,t.jsx)(r.td,{children:"Whether to retry all errors by default"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"nonRetryableErrors"}),(0,t.jsx)(r.td,{children:"string[]"}),(0,t.jsx)(r.td,{children:"undefined"}),(0,t.jsx)(r.td,{children:"List of error class names that should never be retried"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"retryableErrors"}),(0,t.jsx)(r.td,{children:"string[]"}),(0,t.jsx)(r.td,{children:"undefined"}),(0,t.jsxs)(r.td,{children:["List of error class names that should be retried when ",(0,t.jsx)(r.code,{children:"retryAllErrors"})," is false"]})]})]})]}),"\n",(0,t.jsx)(r.h2,{id:"example-filtering-specific-errors",children:"Example: Filtering Specific Errors"}),"\n",(0,t.jsx)(r.p,{children:"Here's an example of how to configure retry behavior for specific error types:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:"config.eventStoreRetry = {\n  maxRetries: 3,\n  initialDelay: 100,\n  maxDelay: 1000,\n  backoffFactor: 2,\n  jitterFactor: 0.1,\n  retryAllErrors: false,\n  retryableErrors: ['NetworkError', 'TimeoutError'],\n  nonRetryableErrors: ['ValidationError', 'AuthenticationError'],\n}\n"})}),"\n",(0,t.jsx)(r.p,{children:"In this example:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Only ",(0,t.jsx)(r.code,{children:"NetworkError"})," and ",(0,t.jsx)(r.code,{children:"TimeoutError"})," will be retried"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"ValidationError"})," and ",(0,t.jsx)(r.code,{children:"AuthenticationError"})," will never be retried"]}),"\n",(0,t.jsx)(r.li,{children:"Other errors will not be retried"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"logging",children:"Logging"}),"\n",(0,t.jsx)(r.p,{children:"The retry mechanism includes detailed logging of retry attempts and failures. You can see these logs in your cloud provider's log aggregator (e.g., Application Insights for Azure)."}),"\n",(0,t.jsx)(r.p,{children:"Example log messages:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"[retryWithBackoff] Attempt 1 failed, retrying in 100ms...\n[retryWithBackoff] Error ValidationError is not retryable, failing immediately\n[retryWithBackoff] Failed after 3 attempts\n"})}),"\n",(0,t.jsx)(r.h2,{id:"azure-provider-configuration",children:"Azure Provider Configuration"}),"\n",(0,t.jsx)(r.p,{children:"When using the Azure provider, you can override the Cosmos DB client's retry behavior by setting the following environment variables:"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Environment Variable"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"COSMOSDB_MAX_RETRIES"})}),(0,t.jsx)(r.td,{children:"Maximum number of retry attempts"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"COSMOSDB_RETRY_INTERVAL"})}),(0,t.jsx)(r.td,{children:"Fixed retry interval in milliseconds"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"COSMOSDB_MAX_WAIT_TIME"})}),(0,t.jsx)(r.td,{children:"Maximum wait time in seconds"})]})]})]}),"\n",(0,t.jsx)(r.p,{children:"These settings will override the Cosmos DB client's default retry behavior. If any of these variables are not set, the client will use its built-in defaults."}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsx)(r.p,{children:"These settings are specific to the Azure provider and control the retry behavior of the Cosmos DB client. They are separate from the general event store retry configuration described above."})})]})}function h(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>l,a:()=>s});var t=n(7294);const i={},o=t.createContext(i);function s(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);