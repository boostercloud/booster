"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[868],{9146:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var i=t(5893),s=t(1151);const o={title:"BEEP 4 - Semantic Versioning",authors:["NickSeagull"],date:"2024-01-25T00:03"},a=void 0,r={permalink:"/blog/0004-semantic-versioning",editUrl:"https://github.com/boostercloud/booster/edit/main/website/proposals/0004-semantic-versioning/index.mdx",source:"@site/proposals/0004-semantic-versioning/index.mdx",title:"BEEP 4 - Semantic Versioning",description:"Introduction",date:"2024-01-25T00:03:00.000Z",formattedDate:"January 25, 2024",tags:[],readingTime:2.305,hasTruncateMarker:!1,authors:[{name:"Nick Tchayka",title:"Booster Core Team",url:"https://github.com/NickSeagull",imageURL:"https://github.com/NickSeagull.png",key:"NickSeagull"}],frontMatter:{title:"BEEP 4 - Semantic Versioning",authors:["NickSeagull"],date:"2024-01-25T00:03"},unlisted:!1,prevItem:{title:"BEEP 3 - Principles of Design",permalink:"/blog/0003-principles-of-design"},nextItem:{title:"BEEP 5 - Agent-Based Codebase Structure",permalink:"/blog/0005-agent-codebase"}},c={authorsImageUrls:[void 0]},l=[{value:"Introduction",id:"introduction",level:2},{value:"Impact on Principle of Least Astonishment",id:"impact-on-principle-of-least-astonishment",level:2},{value:"Impact on Principle of Developer Happiness",id:"impact-on-principle-of-developer-happiness",level:2},{value:"Impact on Principle of Least Effort",id:"impact-on-principle-of-least-effort",level:2},{value:"Usage of SemVer in Early Development Phases",id:"usage-of-semver-in-early-development-phases",level:2},{value:"Standardizing the Use of SemVer",id:"standardizing-the-use-of-semver",level:2},{value:"Considerations",id:"considerations",level:2}];function d(e){const n={a:"a",admonition:"admonition",h2:"h2",p:"p",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{title:"STATUS - ACCEPTED",type:"tip"}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["In the context of the Booster Framework ecosystem, we adopt the ",(0,i.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"})," (SemVer) schema. SemVer is a system of rules and guidelines for assigning and incrementing version numbers within our software development process. By using SemVer, the Booster Framework aims to manage the complexities of dependencies as the ecosystem evolves. The primary goal of implementing Semantic Versioning is to ensure that our version numbers are transparent and informative, effectively communicating the nature of changes in our software to both enterprise and hobbyist developers."]}),"\n",(0,i.jsx)(n.h2,{id:"impact-on-principle-of-least-astonishment",children:"Impact on Principle of Least Astonishment"}),"\n",(0,i.jsx)(n.p,{children:"Semantic Versioning positively impacts the Principle of Least Astonishment. It is a widely recognized and used schema in numerous open-source projects. Adhering to a clear and consistent version numbering system (Major.Minor.Patch) reduces confusion and surprise for developers and users alike. This predictability in versioning enhances the user experience and facilitates the management of software dependencies."}),"\n",(0,i.jsx)(n.h2,{id:"impact-on-principle-of-developer-happiness",children:"Impact on Principle of Developer Happiness"}),"\n",(0,i.jsx)(n.p,{children:"Semantic Versioning aligns with the Principle of Developer Happiness by offering a systematic and standardized approach to versioning. This method simplifies the process of releasing and updating software packages, allowing developers to confidently implement changes. Knowing that version numbers accurately reflect the impact of changes reduces the stress related to dependency management and enables developers to concentrate on innovation and software improvement."}),"\n",(0,i.jsx)(n.h2,{id:"impact-on-principle-of-least-effort",children:"Impact on Principle of Least Effort"}),"\n",(0,i.jsx)(n.p,{children:"Semantic Versioning supports the Principle of Least Effort by making the management of software dependencies more straightforward. By adhering to SemVer, developers can introduce backward-compatible changes without needing new major releases, thereby minimizing the effort needed for maintaining and updating software. Additionally, the clear documentation of public APIs and the use of version numbers to indicate compatibility simplify the integration of dependencies, reducing the effort needed for seamless software interactions."}),"\n",(0,i.jsx)(n.h2,{id:"usage-of-semver-in-early-development-phases",children:"Usage of SemVer in Early Development Phases"}),"\n",(0,i.jsx)(n.p,{children:"During the initial development phases of Booster Framework projects, the major version will remain at 0. This indicates that breaking changes are likely to be frequent as the project evolves. Once the project achieves a stable state, the major version will be incremented to 1, signifying a reduction in the frequency of breaking changes."}),"\n",(0,i.jsx)(n.h2,{id:"standardizing-the-use-of-semver",children:"Standardizing the Use of SemVer"}),"\n",(0,i.jsx)(n.p,{children:"We advise using the Semantic Versioning schema as a standard across all Booster Framework projects. This uniformity will ensure coherence within the ecosystem. The Booster CLI tool should facilitate version management by inspecting exported functions and types, suggesting the next version based on the changes made."}),"\n",(0,i.jsx)(n.h2,{id:"considerations",children:"Considerations"}),"\n",(0,i.jsxs)(n.p,{children:["It's important to note that changes in the implementation of a function, even without altering the API, can produce different results and are considered breaking changes. These should be reflected in the version number accordingly. For more information and examples, please refer to this ",(0,i.jsx)(n.a,{href:"https://github.com/semver/semver/issues/311",children:"GitHub thread"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>a});var i=t(7294);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);