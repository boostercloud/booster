{
  "name": "@boostercloud/framework-integration-tests",
  "description": "Example project for Booster",
  "version": "2.18.4",
  "author": "Boosterin Labs SLU",
  "homepage": "https://boosterframework.com",
  "publishConfig": {
    "access": "restricted"
  },
  "bugs": "https://github.com/boostercloud/booster/issues",
  "dependencies": {
    "@boostercloud/framework-common-helpers": "workspace:^2.18.4",
    "@boostercloud/framework-core": "workspace:^2.18.4",
    "@boostercloud/framework-provider-aws": "workspace:^2.18.4",
    "@boostercloud/framework-provider-azure": "workspace:^2.18.4",
    "@boostercloud/framework-provider-local": "workspace:^2.18.4",
    "@boostercloud/framework-types": "workspace:^2.18.4",
    "aws-sdk": "2.853.0",
    "graphql": "^16.6.0",
    "tslib": "^2.4.0",
    "@effect-ts/core": "^0.60.4",
    "express-unless": "2.1.3",
    "express": "^4.19.2",
    "effect": "2.4.17",
    "@effect/platform": "0.48.24",
    "@effect/schema": "0.64.18",
    "@effect/cli": "0.35.26",
    "@effect/printer": "0.32.2",
    "@effect/typeclass": "0.23.17",
    "@effect/printer-ansi": "0.32.26",
    "@effect/platform-node": "0.45.26",
    "fast-check": "^3.13.2",
    "ws": "8.17.1"
  },
  "devDependencies": {
    "@boostercloud/eslint-config": "workspace:^2.18.4",
    "@boostercloud/application-tester": "workspace:^2.18.4",
    "@boostercloud/cli": "workspace:^2.18.4",
    "@boostercloud/framework-provider-aws-infrastructure": "workspace:^2.18.4",
    "@boostercloud/framework-provider-azure-infrastructure": "workspace:^2.18.4",
    "@boostercloud/framework-provider-local-infrastructure": "workspace:^2.18.4",
    "@boostercloud/metadata-booster": "workspace:^2.18.4",
    "@types/aws-lambda": "8.10.48",
    "@types/chai": "4.2.18",
    "@types/chai-arrays": "2.0.0",
    "@types/chai-as-promised": "7.1.4",
    "@types/child-process-promise": "^2.2.1",
    "@types/faker": "5.1.5",
    "@types/jsonwebtoken": "9.0.1",
    "@types/mocha": "10.0.1",
    "@types/nedb": "^1.8.12",
    "@types/node": "^18.18.2",
    "@types/sinon": "10.0.0",
    "@types/sinon-chai": "3.2.5",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "@apollo/client": "3.7.13",
    "cdktf": "0.19.2",
    "cdktf-cli": "0.19.2",
    "ink": "^3.0.5",
    "react": "^17.0.0",
    "constructs": "^10.0.0",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "child-process-promise": "^2.2.1",
    "cross-fetch": "3.1.5",
    "eslint": "^8.23.1",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "3.4.0",
    "faker": "5.1.0",
    "graphology-types": "^0.24.0",
    "jsonwebtoken": "9.0.1",
    "jwks-rsa": "3.0.1",
    "mocha": "10.2.0",
    "mocha-skip-if": "0.0.3",
    "@seald-io/nedb": "4.0.2",
    "nyc": "^15.1.0",
    "prettier": "2.3.0",
    "rimraf": "^5.0.0",
    "reflect-metadata": "0.1.13",
    "serverless": "3.8.0",
    "serverless-artillery": "0.5.2",
    "subscriptions-transport-ws": "0.11.0",
    "ts-node": "^10.9.1",
    "ts-patch": "3.1.2",
    "typescript": "5.1.6",
    "sinon": "9.2.3",
    "eslint-plugin-unicorn": "~44.0.2",
    "concurrently": "~8.2.2"
  },
  "engines": {
    "node": ">=18.0.0 <19.0.0"
  },
  "license": "Apache-2.0",
  "main": "dist/index.js",
  "repository": "boostercloud/booster",
  "scripts": {
    "prepare": "ts-patch install -s",
    "test": "",
    "watch:local": "nodemon --watch ../framework-provider-local/dist --watch ../framework-provider-local-infrastructure --watch dist --exec \"./node_modules/.bin/boost start -e local\"",
    "lint:check": "eslint --ext '.js,.ts' **/*.ts",
    "lint:fix": "eslint --quiet --fix --ext '.js,.ts' **/*.ts",
    "build": "tsc -b tsconfig.json",
    "clean": "rimraf ./dist tsconfig.tsbuildinfo *-integration-sandbox",
    "postinstall": "rimraf ../../node_modules/serverless/node_modules/archiver && echo 'Deleted buggy \"archiver\" module from \"serveless\" dependencies to use the newer hoisted one'",
    "integration": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" npm run integration/cli && npm run integration/local && npm run integration/aws && npm run integration/azure",
    "integration/cli": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" BOOSTER_ENV=test mocha --forbid-only --exit --config \"integration/provider-unaware/cli/.mocharc.yml\" \"integration/provider-unaware/cli/**/*.integration.ts\"",
    "integration/aws": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" npm run integration/aws-deploy && npm run integration/aws-func && npm run integration/aws-end-to-end && npm run integration/aws-load && npm run integration/aws-nuke",
    "integration/aws-deploy": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-specific/aws/deployment/.mocharc.yml\" \"integration/provider-specific/aws/deployment/**/*.integration.ts\"",
    "integration/aws-func": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AWS AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-unaware/functionality/.mocharc.yml\" \"integration/provider-unaware/functionality/**/*.integration.ts\"",
    "integration/aws-end-to-end": "echo 'Skipping integration tests.' # TODO 'Enable it again when AWS Provider will be upgrade it' TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AWS AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-unaware/end-to-end/.mocharc.yml\" \"integration/provider-unaware/end-to-end/**/*.integration.ts\"",
    "integration/aws-load": "echo 'Skipping integration tests.' # TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AWS AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-unaware/load/.mocharc.yml\" \"integration/provider-unaware/load/**/*.load.ts\"",
    "integration/aws-nuke": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-specific/aws/nuke/.mocharc.yml\" \"integration/provider-specific/aws/nuke/**/*.integration.ts\"",
    "integration/local": "concurrently \"npm run integration/local-start\" \"npm run integration/local-delayed-end-to-end\"",
    "integration/local-ongoing": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" npm run integration/local-start && npm run integration/local-stop",
    "integration/local-start": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" BOOSTER_ENV=local mocha --forbid-only --config \"integration/provider-specific/local/start/.mocharc.yml\" \"integration/provider-specific/local/start/*.integration.ts\"",
    "integration/local-func": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=LOCAL BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-unaware/functionality/.mocharc.yml\" \"integration/provider-unaware/functionality/**/*.integration.ts\"",
    "integration/local-end-to-end": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=LOCAL BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-unaware/end-to-end/.mocharc.yml\" \"integration/provider-unaware/end-to-end/**/*.integration.ts\"",
    "integration/local-delayed-end-to-end": "sleep 180 && npm run integration/local-end-to-end && npm run integration/local-stop",
    "integration/local-stop": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-specific/local/stop/.mocharc.yml\" \"integration/provider-specific/local/stop/*.integration.ts\"",
    "integration/azure": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" npm run integration/azure-deploy && npm run integration/azure-end-to-end && npm run integration/azure-func && npm run integration/azure-nuke",
    "integration/azure-deploy": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AZURE BOOSTER_ENV=azure mocha --forbid-only --exit --config \"integration/provider-specific/azure/deployment/.mocharc.yml\" \"integration/provider-specific/azure/deployment/**/*.integration.ts\"",
    "integration/azure-nuke": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AZURE BOOSTER_ENV=azure mocha --forbid-only --exit --config \"integration/provider-specific/azure/nuke/.mocharc.yml\" \"integration/provider-specific/azure/nuke/**/*.integration.ts\"",
    "integration/azure-end-to-end": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AZURE BOOSTER_ENV=azure mocha --forbid-only --exit --config \"integration/provider-unaware/end-to-end/.mocharc.yml\" \"integration/provider-unaware/end-to-end/**/*.integration.ts\"",
    "integration/azure-func": "TS_NODE_PROJECT=\"./tsconfig.integration.json\" TESTED_PROVIDER=AZURE BOOSTER_ENV=azure mocha --forbid-only --exit --config \"integration/provider-unaware/end-to-end/.mocharc.yml\" \"integration/provider-unaware/functionality/**/*.integration.ts\""
  },
  "types": "dist/index.d.ts"
}
