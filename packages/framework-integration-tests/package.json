{
  "name": "@boostercloud/framework-integration-tests",
  "description": "Example project for Booster",
  "version": "0.20.4",
  "author": "Booster Cloud",
  "homepage": "https://booster.cloud",
  "private": true,
  "publishConfig": {
    "access": "restricted"
  },
  "bugs": "https://github.com/boostercloud/booster/issues",
  "dependencies": {
    "@boostercloud/framework-common-helpers": "^0.20.4",
    "@boostercloud/framework-core": "^0.20.4",
    "@boostercloud/framework-provider-aws": "^0.20.4",
    "@boostercloud/framework-provider-kubernetes": "^0.20.4",
    "@boostercloud/framework-provider-local": "^0.20.4",
    "@boostercloud/framework-types": "^0.20.4",
    "aws-sdk": "2.853.0"
  },
  "devDependencies": {
    "@boostercloud/application-tester": "^0.20.4",
    "@boostercloud/framework-provider-aws-infrastructure": "^0.20.4",
    "@boostercloud/framework-provider-kubernetes-infrastructure": "^0.20.4",
    "@boostercloud/framework-provider-local-infrastructure": "^0.20.4",
    "@kubernetes/client-node": "0.14.3",
    "@types/aws-lambda": "8.10.48",
    "@types/chai-arrays": "2.0.0",
    "@types/faker": "5.1.5",
    "@types/jsonwebtoken": "8.5.1",
    "@types/ws": "7.4.2",
    "apollo-cache-inmemory": "1.6.6",
    "apollo-client": "2.6.10",
    "apollo-link": "1.2.14",
    "apollo-link-http": "1.5.17",
    "apollo-link-ws": "1.0.20",
    "apollo-utilities": "1.3.4",
    "cross-fetch": "3.1.4",
    "faker": "5.1.0",
    "graphql-tag": "2.12.4",
    "jsonwebtoken": "8.5.1",
    "jwks-rsa": "2.0.3",
    "metadata-booster": "0.3.1",
    "mocha": "8.4.0",
    "serverless": "1.83.3",
    "serverless-artillery": "0.5.2",
    "subscriptions-transport-ws": "0.9.18",
    "ttypescript": "1.5.12",
    "ws": "7.4.5",
    "yaml": "1.10.2"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "license": "Apache-2.0",
  "main": "dist/index.js",
  "repository": "boostercloud/booster",
  "scripts": {
    "watch:local": "nodemon --watch ../framework-provider-local/dist --watch ../framework-provider-local-infrastructure --watch dist --exec \"../cli/bin/run start -e local\"",
    "lint:check": "eslint --ext '.js,.ts' **/*.ts",
    "lint:fix": "eslint --quiet --fix --ext '.js,.ts' **/*.ts",
    "compile": "ttsc -b tsconfig.json",
    "clean": "rimraf ./dist tsconfig.tsbuildinfo",
    "postinstall": "rimraf ../../node_modules/serverless/node_modules/archiver && echo 'Deleted buggy \"archiver\" module from \"serveless\" dependencies to use the newer hoisted one'",
    "integration": "npm run integration/cli && npm run integration/local && npm run integration/aws",
    "integration/cli": "mocha --forbid-only --exit --config \"integration/provider-unaware/cli/.mocharc.yml\" \"integration/provider-unaware/cli/**/*.integration.ts\"",
    "integration/aws": "npm run integration/aws-deploy && npm run integration/aws-func && npm run integration/aws-end-to-end && npm run integration/aws-load && npm run integration/aws-nuke",
    "integration/aws-deploy": "AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-specific/aws/deployment/.mocharc.yml\" \"integration/provider-specific/aws/deployment/**/*.integration.ts\"",
    "integration/aws-func": "TESTED_PROVIDER=AWS AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-unaware/functionality/.mocharc.yml\" \"integration/provider-unaware/functionality/**/*.integration.ts\"",
    "integration/aws-end-to-end": "TESTED_PROVIDER=AWS AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-unaware/end-to-end/.mocharc.yml\" \"integration/provider-unaware/end-to-end/**/*.integration.ts\"",
    "integration/aws-load": "echo 'Skipping integration tests.' # TESTED_PROVIDER=AWS AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-unaware/load/.mocharc.yml\" \"integration/provider-unaware/load/**/*.load.ts\"",
    "integration/aws-nuke": "AWS_SDK_LOAD_CONFIG=true BOOSTER_ENV=production mocha --forbid-only --exit --config \"integration/provider-specific/aws/nuke/.mocharc.yml\" \"integration/provider-specific/aws/nuke/**/*.integration.ts\"",
    "integration/k8s": "npm run integration/k8s-deploy && npm run integration/k8s-nuke",
    "integration/k8s-deploy": "BOOSTER_ENV=kubernetes mocha --forbid-only --exit --config \"integration/provider-specific/kubernetes/deployment/.mocharc.yml\" \"integration/provider-specific/kubernetes/deployment/**/*.integration.ts\"",
    "integration/k8s-nuke": "BOOSTER_ENV=kubernetes mocha --forbid-only --exit --config \"integration/provider-specific/kubernetes/nuke/.mocharc.yml\" \"integration/provider-specific/kubernetes/nuke/**/*.integration.ts\"",
    "integration/local": "BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-specific/local/.mocharc.yml\" \"integration/provider-specific/local/**/*.integration.ts\"",
    "integration/local-ongoing": "npm run integration/local-start && npm run integration/local-stop",
    "integration/local-start": "BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-specific/local/start/.mocharc.yml\" \"integration/provider-specific/local/start/*.integration.ts\"",
    "integration/local-func": "TESTED_PROVIDER=LOCAL BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-unaware/functionality/.mocharc.yml\" \"integration/provider-unaware/functionality/**/*.integration.ts\"",
    "integration/local-end-to-end": "TESTED_PROVIDER=LOCAL BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-unaware/end-to-end/.mocharc.yml\" \"integration/provider-unaware/end-to-end/**/*.integration.ts\"",
    "integration/local-stop": "BOOSTER_ENV=local mocha --forbid-only --exit --config \"integration/provider-specific/local/stop/.mocharc.yml\" \"integration/provider-specific/local/stop/*.integration.ts\""
  },
  "types": "dist/index.d.ts"
}
